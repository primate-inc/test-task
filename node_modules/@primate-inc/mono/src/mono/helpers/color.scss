@use 'sass:map';
@use 'sass:string';

// Get color value from token map
// 
// For color palletes you can use `*` to mark primary color,
// this will allow for a shorter syntax.
// 
// Example:
// `color(grey)` -> $token: grey > 300* -> #fafafa
//
// Usage:
// color(white)
// color(purple, 300)
//
@function color($keys...) {
  $color-found: false;
  $stringKeys: ();

  @for $i from 1 through length($keys) {
    $key: nth($keys, $i);
    $stringKeys: append($stringKeys, string.quote(to-lower-case(#{$key})));
  }

  $color: token(color, $stringKeys...);

  @if (type-of($color) == 'map') {
    $keys-list: map.keys($color);

    @each $key in $keys-list {
      @if (string.index($key, '*')) {
        $color-found: true;
        $color: map.get($color, $key);
      }
    }

    @if (not $color-found) {
      @error 'There is no main color defined. Use named key to access the color. Available keys: #{$keys-list}';
    }
  } @else if (type-of($color) == 'color') {
    $color-found: true;
  }

  @if (not $color-found) {
    @error 'Color not found. Check if #{$keys} exist in tokens.';
  }

  @return $color;
}