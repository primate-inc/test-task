@use 'sass:map';
@use 'sass:list';


@function radius($keys...) {
  $map: token('radius', $keys...);

  $tl: map.get($map, topLeft);
  $tr: map.get($map, topRight);
  $bl: map.get($map, bottomLeft);
  $br: map.get($map, bottomRight);

  @if ($tl != null and $tr != null and $br != null and $bl !=null) {
    @if ($tl == $tr == $bl == $br) {
      @return rem($tl);
    } @else {
      @return rem($tl) rem($tr) rem($br) rem($bl);
    }
  } @else {
    @error "Didn't found radius properties in: #{$map}."
  }
}

@mixin border-radius($keys...) {
  border-radius: radius($keys...);
}

@mixin responsive-border-radius($keys...) {
  $map: token('radius', $keys...);
  $check: false;

  @if (type-of($map) == 'map') {
    @each $screen, $value in sortedBreakpoints() {
      $stepSize: map.get($map, $screen);

      @if ($stepSize != null) {
        $check: true;

        @include screen($screen) {
          @include border-radius(list.append($keys, $screen)...);
        }
      }
    }

    @if (not $check) {
      @error 'No breakpoints found. You need to select a key that returns a map containing one of following keys: #{map.keys(sortedBreakpoints())}';
    }

  } @else {
    @error 'No map found. Instead had: Type <#{type-of($map)}>: #{$map}';
  }
}
